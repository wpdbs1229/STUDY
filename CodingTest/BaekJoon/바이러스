import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

/*
7 (컴퓨터의 수)
6 (네트워크 상의 연결되어있는 컴퓨터의 수)
1 2
2 3
1 5
5 2
5 6
4 7
 */
public class 바이러스 {

    static int computerNum, lineNum;
    static int[][] network;
    static int infectedComputerNum = 0;
    static boolean[] visited;

    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//        BufferedReader br = new BufferedReader(new FileReader("test.txt"));
        computerNum = Integer.parseInt(br.readLine());
        lineNum = Integer.parseInt(br.readLine());

        network = new int[computerNum + 1][computerNum + 1];

        for (int i = 0; i < lineNum; i++) {

            StringTokenizer st = new StringTokenizer(br.readLine());

            int a = Integer.parseInt(st.nextToken());
            int b = Integer.parseInt(st.nextToken());

            network[a][b] = network[b][a] = 1;

        }

        visited = new boolean[computerNum + 1];

        dfs(1);
        for (int i = 1; i < computerNum + 1; i++) {
            if (visited[i]){
                infectedComputerNum++;
            }
        }

        System.out.println(infectedComputerNum - 1);
    }

    private static void dfs(int currentComputer) {

        visited[currentComputer] = true;

        for (int i = 1; i < computerNum + 1; i++) {
            if (network[currentComputer][i] == 1 && !visited[i]) {
                dfs(i);
            }
        }
    }
}
