import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;


public class 단지번호붙이기 {

    static int size;
    static int[] dx = {-1, 0, 1, 0};
    static int[] dy = {0, -1, 0, 1};
    static int[][] town;
    static boolean[][] visited;
    static int count;

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
//        BufferedReader br = new BufferedReader(new FileReader("test.txt"));
        List<Integer> result = new ArrayList<>();

        size = Integer.parseInt(br.readLine());
        town = new int[size][size];
        visited = new boolean[size][size];
        for (int i = 0; i < size; i++) {

            char[] str = br.readLine().toCharArray();
            for (int j = 0; j < size; j++) {
                town[i][j] = str[j] - '0';
            }
        }

        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++){
                    if (town[i][j] == 1 && !visited[i][j]){
                        count = 0;
                        dfs(i, j);
                        result.add(count);
                    }

            }
        }
        result.sort(Comparator.naturalOrder());
        System.out.println(result.size());
        for (int item : result){
            System.out.println(item);
        }
    }

    private static void dfs(int x, int y) {

        count++;
        visited[x][y] = true;

        for (int i = 0; i < 4; i++) {

            int nx = x + dx[i];
            int ny = y + dy[i];
            if (nx > -1 && nx < town.length && ny > -1 && ny < town[0].length){
                if (town[nx][ny] == 1 && !visited[nx][ny]) {
                    dfs(nx, ny);
                }
            }

        }
    }
}
