import java.util.*;

public class SortTreeSet {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		TreeSet<Integer> integer = new TreeSet<Integer>();
		
		integer.add(2);
		integer.add(1);
		integer.add(4);
		integer.add(3);
		
		System.out.println("데이터 저장 갯수 : " + integer.size());
		
		Iterator<Integer> itr = integer.iterator();
		
		while(itr.hasNext()) {
			System.out.println(itr.next());
		}
		
	}
	/*
	 * 출력결과 
	 * 1
	 * 2
	 * 3
	 * 4
	 * 
	 * TreeSet<E>은 데이터를 정렬된 상태로 저장하는 자료구조이다.
	 * 그럼 무엇을 정렬의 기준으로 삼는가? >>>> 대부분의 인스턴스의 정렬기준은 프로그래머가 직접 정의 해야한다. >>>Comparable<T> 인터페이스에 정의된 CompareTo메소드 통해서 정한다.
	 * >>>데이터가 저장될 때마다 CampareTo메소드를 호출하여 반환된 값을 기반으로 정렬을 진행한다.
	 * 저장된 순서에 상관없이 정렬되어 나오는 이유는 Integer가 Compareable<T> 인터페이스를 구현하고 있기 때문이다.
	 * 오름차순으로 나오는 이유는 Iterator가 오름차순으로 참조하기 때문이다. 
	 */
}
